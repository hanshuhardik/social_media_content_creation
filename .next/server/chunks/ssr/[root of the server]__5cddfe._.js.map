{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HARDIK/Desktop/Social-Media-Post-Generator-main/src/app/page.tsx"],"sourcesContent":["// 'use client';\n\n// import { useState, useEffect } from 'react';\n\n// const TONE_OPTIONS = [\n//   'Professional',\n//   'Casual',\n//   'Friendly',\n//   'Humorous',\n//   'Formal',\n//   'Inspirational',\n//   'Educational',\n//   'Conversational'\n// ] as const;\n\n// type ToneOption = typeof TONE_OPTIONS[number];\n\n// interface GeneratePostParams {\n//   description: string;\n//   platform: string;\n//   tone: string;\n//   wordLimit?: number;\n//   makeThread?: boolean;\n//   includeHashtags: boolean;\n//   includeEmoji: boolean;\n// }\n\n// function Page() {\n//   // Client-side only state\n//   const [mounted, setMounted] = useState(false);\n  \n//   // Form states\n//   const [description, setDescription] = useState('');\n//   const [platform, setPlatform] = useState('twitter');\n//   const [makeThread, setMakeThread] = useState(false);\n//   const [wordLimit, setWordLimit] = useState(35);\n//   const [generatedContent, setGeneratedContent] = useState<string[]>([]);\n//   const [loading, setLoading] = useState(false);\n//   const [copied, setCopied] = useState(false);\n//   const [tone, setTone] = useState<ToneOption>('Professional');\n//   const [includeHashtags, setIncludeHashtags] = useState(false);\n//   const [includeEmoji, setIncludeEmoji] = useState(false);\n//   const [postsToGenerate, setPostsToGenerate] = useState(1);\n\n//   // Set mounted state after hydration\n//   useEffect(() => {\n//     setMounted(true);\n//   }, []);\n\n//   // Don't render anything until after hydration\n//   if (!mounted) {\n//     return null;\n//   }\n\n//   const generateSinglePost = async (params: GeneratePostParams) => {\n//     const response = await fetch('/api/generate-post', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(params),\n//     });\n    \n//     const data = await response.json();\n//     if (!response.ok) {\n//       throw new Error(data.error || 'Failed to generate post');\n//     }\n//     return data.content;\n//   };\n\n//   const handleSubmit = async (e: React.FormEvent) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     setCopied(false);\n//     setGeneratedContent([]);\n    \n//     try {\n//       // Create array of promises for parallel execution\n//       const generatePromises = Array(postsToGenerate)\n//         .fill(null)\n//         .map(() => \n//           generateSinglePost({ \n//             description, \n//             platform, \n//             tone,\n//             wordLimit: platform === 'linkedin' ? wordLimit : undefined,\n//             makeThread,\n//             includeHashtags,\n//             includeEmoji,\n//           })\n//         );\n\n//       // Execute all API calls in parallel\n//       const results = await Promise.all(generatePromises);\n//       setGeneratedContent(results);\n//     } catch (error) {\n//       console.error('Error:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleCopy = async (content: string) => {\n//     try {\n//       await navigator.clipboard.writeText(content);\n//       setCopied(true);\n//       setTimeout(() => setCopied(false), 2000);\n//     } catch (err) {\n//       console.error('Failed to copy text:', err);\n//     }\n//   };\n\n//   return (\n//     <main className=\"min-h-screen relative overflow-hidden\" style={{\n//       background: 'linear-gradient(135deg, #fcfcfc 0%, #f8f7ff 100%)'\n//     }}>\n//       {/* Background Elements */}\n//       <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n//         <div className=\"absolute -top-10 -left-10 w-40 h-40 rounded-full opacity-5 animate-float\" \n//           style={{ background: 'linear-gradient(45deg, #9C27B0, #673AB7)' }}></div>\n//         <div className=\"absolute top-1/4 -right-20 w-60 h-60 rounded-full opacity-5 animate-float-delayed\" \n//           style={{ background: 'linear-gradient(45deg, #7E57C2, #5E35B1)' }}></div>\n//         <div className=\"absolute bottom-1/4 -left-20 w-52 h-52 rounded-full opacity-5 animate-float\" \n//           style={{ background: 'linear-gradient(45deg, #B388FF, #7C4DFF)' }}></div>\n        \n//         {/* Floating Emojis */}\n//         <div className=\"absolute top-20 right-[10%] text-4xl opacity-10 animate-float\">‚ú®</div>\n//         <div className=\"absolute top-[40%] left-[5%] text-4xl opacity-10 animate-float-delayed\">üí°</div>\n//         <div className=\"absolute bottom-[30%] right-[15%] text-4xl opacity-10 animate-float\">üöÄ</div>\n//         <div className=\"absolute top-[60%] left-[15%] text-4xl opacity-10 animate-float-delayed\">üí´</div>\n//         <div className=\"absolute bottom-[10%] right-[5%] text-4xl opacity-10 animate-float\">‚≠ê</div>\n//       </div>\n\n//       {/* Hero Section */}\n//       <div className=\"relative py-12 px-4\">\n//         <div className=\"max-w-5xl mx-auto text-center\">\n//           <div className=\"inline-block mb-2 px-4 py-1 rounded-full text-sm font-medium bg-gradient-to-r from-purple-50 to-purple-100 text-purple-800 shadow-sm\">\n//             AI-Powered Social Media Assistant\n//           </div>\n//           <h1 className=\"text-5xl font-bold mb-6 text-black bg-clip-text\" style={{\n//             textShadow: '0 2px 10px rgba(0,0,0,0.05)'\n//           }}>\n//             Generate social media posts in seconds for free\n//           </h1>\n//           <p className=\"text-xl mb-8 text-gray-600 max-w-3xl mx-auto\">\n//             Stay consistent, creative, and productive with our free AI social media post generator.\n//           </p>\n          \n//           {/* Social Media Icons */}\n//           <div className=\"flex justify-center gap-6 mb-12\">\n//             <div className=\"w-12 h-12 rounded-full flex items-center justify-center bg-[#1877F2] hover:opacity-90 transition-all transform hover:-translate-y-1 hover:scale-110\">\n//               <svg className=\"w-6 h-6 text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n//                 <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\"/>\n//               </svg>\n//             </div>\n//               {/* <div className=\"w-12 h-12 rounded-full flex items-center justify-center bg-gradient-to-tr from-[#FF7A00] via-[#FE0362] to-[#D300C5] hover:opacity-90 transition-all transform hover:-translate-y-1 hover:scale-110\">\n//                 <svg className=\"w-6 h-6 text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n//                   <path d=\"M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.319 1.347 20.651.935 19.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227-.224.562-.479.96-.899 1.382-.419.419-.824.679-1.38.896-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421-.569-.224-.96-.479-1.379-.899-.421-.419-.69-.824-1.38-.898.18-1.9 1.12-3.72 2.58-4.96 1.66-1.44 3.98-2.13 6.15-1.72.02 1.48-.04 2.96-.04 4.44-.99-.32-2.15-.23-3.02.37-.63.41-1.11 1.04-1.36 1.75-.21.51-.15 1.07-.14 1.61.24 1.64 1.82 3.02 3.5 2.87 1.12-.01 2.19-.66 2.77-1.61.19-.33.4-.67.41-1.06.1-1.79.06-3.57.07-5.36.01-4.03-.01-8.05.02-12.07z\"/>\n//                 </svg>\n//               </div> */}\n//             <div className=\"w-12 h-12 rounded-full flex items-center justify-center bg-black hover:opacity-90 transition-all transform hover:-translate-y-1 hover:scale-110\">\n//               <svg className=\"w-6 h-6 text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n//                 <path d=\"M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z\"/>\n//               </svg>\n//             </div>\n//             <div className=\"w-12 h-12 rounded-full flex items-center justify-center bg-[#0A66C2] hover:opacity-90 transition-all transform hover:-translate-y-1 hover:scale-110\">\n//               <svg className=\"w-6 h-6 text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n//                 <path d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\"/>\n//               </svg>\n//             </div>\n//             <div className=\"w-12 h-12 rounded-full flex items-center justify-center bg-[#E60023] hover:opacity-90 transition-all transform hover:-translate-y-1 hover:scale-110\">\n//               <svg className=\"w-6 h-6 text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n//                 <path d=\"M12.017 0C5.396 0 .029 5.367.029 11.987c0 5.079 3.158 9.417 7.618 11.162-.105-.949-.199-2.403.041-3.439.219-.937 1.406-5.957 1.406-5.957s-.359-.72-.359-1.781c0-1.663.967-2.911 2.168-2.911 1.024 0 1.518.769 1.518 1.688 0 1.029-.653 2.567-.992 3.992-.285 1.193.6 2.165 1.775 2.165 2.128 0 3.768-2.245 3.768-5.487 0-2.861-2.063-4.869-5.008-4.869-3.41 0-5.409 2.562-5.409 5.199 0 1.033.394 2.143.889 2.741.099.12.112.225.085.345-.09.375-.293 1.199-.334 1.363-.053.225-.172.271-.401.165-1.495-.69-2.433-2.878-2.433-4.646 0-3.776 2.748-7.252 7.92-7.252 4.158 0 7.392 2.967 7.392 6.923 0 4.135-2.607 7.462-6.233 7.462-1.214 0-2.354-.629-2.758-1.379l-.749 2.848c-.269 1.045-1.004 2.352-1.498 3.146 1.123.345 2.306.535 3.55.535 6.607 0 11.985-5.365 11.985-11.987C23.97 5.39 18.592.026 11.985.026L12.017 0z\"/>\n//               </svg>\n//             </div>\n//             <div className=\"w-12 h-12 rounded-full flex items-center justify-center bg-[#FF0000] hover:opacity-90 transition-all transform hover:-translate-y-1 hover:scale-110\">\n//               <svg className=\"w-6 h-6 text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n//                 <path d=\"M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z\"/>\n//               </svg>\n//             </div>\n//               <div className=\"w-12 h-12 rounded-full flex items-center justify-center bg-[#000000] hover:opacity-90 transition-all transform hover:-translate-y-1 hover:scale-110\">\n//                 <svg className=\"w-6 h-6 text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n//                   <path d=\"M12.525.02c1.31-.02 2.61-.01 3.91-.02.08 1.53.63 3.09 1.75 4.17 1.12 1.11 2.7 1.62 4.24 1.79v4.03c-1.44-.05-2.89-.35-4.2-.97-.57-.26-1.1-.59-1.62-.93-.01 2.92.01 5.84-.02 8.75-.08 1.4-.54 2.79-1.35 3.94-1.31 1.92-3.58 3.17-5.91 3.21-1.43.08-2.86-.31-4.08-1.03-2.02-1.19-3.44-3.37-3.65-5.71-.02-.5-.03-1-.01-1.49.18-1.9 1.12-3.72 2.58-4.96 1.66-1.44 3.98-2.13 6.15-1.72.02 1.48-.04 2.96-.04 4.44-.99-.32-2.15-.23-3.02.37-.63.41-1.11 1.04-1.36 1.75-.21.51-.15 1.07-.14 1.61.24 1.64 1.82 3.02 3.5 2.87 1.12-.01 2.19-.66 2.77-1.61.19-.33.4-.67.41-1.06.1-1.79.06-3.57.07-5.36.01-4.03-.01-8.05.02-12.07z\"/>\n//                 </svg>\n//               </div>\n              \n//           </div>\n//           {/* Generator Form */}\n//           <div className=\"relative pt-4 px-4\">\n//             <div className=\"max-w-3xl mx-auto\">\n//               <form onSubmit={handleSubmit} className=\"space-y-8 p-8 rounded-2xl shadow-xl bg-white/90 backdrop-blur-md border border-gray-100\">\n//                 <div>\n//                   <label htmlFor=\"description\" className=\"block text-lg font-medium mb-3 text-black\">\n//                     What would you like to post about?\n//                   </label>\n//                   <textarea\n//                     id=\"description\"\n//                     value={description}\n//                     onChange={(e) => setDescription(e.target.value)}\n//                     className=\"w-full px-4 py-3 rounded-xl focus:outline-none focus:ring-2 focus:ring-purple-500 bg-white/80 backdrop-blur-sm transition-all border border-gray-200 hover:border-purple-300\"\n//                     style={{ \n//                       color: '#000000'\n//                     }}\n//                     rows={4}\n//                     placeholder=\"Enter your post topic or description...\"\n//                     required\n//                   />\n//                 </div>\n\n//                 <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n//                   <div>\n//                     <label htmlFor=\"platform\" className=\"block text-lg font-medium mb-3 text-black\">\n//                       Platform\n//                     </label>\n//                     <select\n//                       id=\"platform\"\n//                       value={platform}\n//                       onChange={(e) => setPlatform(e.target.value)}\n//                       className=\"w-full px-4 py-3 rounded-xl focus:outline-none focus:ring-2 focus:ring-purple-500 bg-white/80 backdrop-blur-sm transition-all border border-gray-200 hover:border-purple-300\"\n//                       style={{ color: '#000000' }}\n//                     >\n//                       <option value=\"twitter\">X (Twitter)</option>\n//                       <option value=\"linkedin\">LinkedIn</option>\n//                       <option value=\"blog\">blog</option>\n//                       <option value=\"facebook\">Facebook</option>\n//                       <option value=\"instagram\">Instagram</option>\n//                     </select>\n//                   </div>\n\n//                   <div>\n//                     <label htmlFor=\"tone\" className=\"block text-lg font-medium mb-3 text-black\">\n//                       Tone of Voice\n//                     </label>\n//                     <select\n//                       id=\"tone\"\n//                       value={tone}\n//                       onChange={(e) => setTone(e.target.value as ToneOption)}\n//                       className=\"w-full px-4 py-3 rounded-xl focus:outline-none focus:ring-2 focus:ring-purple-500 bg-white/80 backdrop-blur-sm transition-all border border-gray-200 hover:border-purple-300\"\n//                       style={{ color: '#000000' }}\n//                     >\n//                       {TONE_OPTIONS.map((t) => (\n//                         <option key={t} value={t}>{t}</option>\n//                       ))}\n//                     </select>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n//                   {platform === 'linkedin' || platform==='blog' && (\n//                     <div>\n//                       <label htmlFor=\"wordLimit\" className=\"block text-lg font-medium mb-3 text-black\">\n//                         Approximate Words\n//                       </label>\n//                       <div className=\"flex items-center space-x-4\">\n//                         <input\n//                           type=\"range\"\n//                           id=\"wordLimit\"\n//                           min=\"10\"\n//                           max=\"2500\"\n//                           value={wordLimit}\n//                           onChange={(e) => setWordLimit(Number(e.target.value))}\n//                           className=\"w-full h-2 rounded-lg appearance-none cursor-pointer\"\n//                           style={{ \n//                             backgroundColor: 'white',\n//                             background: 'linear-gradient(to right, gray 0%, gray ' + (wordLimit/2500*100) + '%, gray ' + (wordLimit/2500*100) + '%, gray 100%)',\n//                             height: '4px',\n//                             border: '1px solid gray'\n//                           }}\n//                         />\n//                         <span className=\"font-medium min-w-[3rem]\" style={{ color: 'black' }}>{wordLimit}</span>\n//                       </div>\n//                     </div>\n//                   )}\n\n//                   <div>\n//                     <label htmlFor=\"postsToGenerate\" className=\"block text-lg font-medium mb-3 text-black\">\n//                       Number of Variations\n//                     </label>\n//                     <select\n//                       id=\"postsToGenerate\"\n//                       value={postsToGenerate}\n//                       onChange={(e) => setPostsToGenerate(Number(e.target.value))}\n//                       className=\"w-full px-4 py-3 rounded-xl focus:outline-none focus:ring-2 focus:ring-purple-500 bg-white/80 backdrop-blur-sm transition-all border border-gray-200 hover:border-purple-300\"\n//                       style={{ color: '#000000' }}\n//                     >\n//                       {[1, 2, 3, 4, 5].map((num) => (\n//                         <option key={num} value={num}>{num} post{num > 1 ? 's' : ''}</option>\n//                       ))}\n//                     </select>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"flex flex-col md:flex-row gap-6\">\n//                   {platform === 'twitter' && (\n//                     <div className=\"flex items-center space-x-3\">\n//                       <label htmlFor=\"makeThread\" className=\"text-lg font-medium text-black\">\n//                         Create Thread?\n//                       </label>\n//                       <label className=\"relative inline-flex items-center cursor-pointer\">\n//                         <input\n//                           type=\"checkbox\"\n//                           id=\"makeThread\"\n//                           checked={makeThread}\n//                           onChange={(e) => setMakeThread(e.target.checked)}\n//                           className=\"sr-only peer\"\n//                         />\n//                         <div className=\"w-11 h-6 rounded-full peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-purple-800 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all\" \n//                           style={{ \n//                             backgroundColor: makeThread ? 'gray' : 'white',\n//                             borderColor: 'black',\n//                             border: '1px solid black'\n//                           }}></div>\n//                       </label>\n//                     </div>\n//                   )}\n\n//                   <div className=\"flex items-center space-x-3\">\n//                     <label htmlFor=\"includeHashtags\" className=\"text-lg font-medium text-black\">\n//                       Add Hashtags\n//                     </label>\n//                     <label className=\"relative inline-flex items-center cursor-pointer\">\n//                       <input\n//                         type=\"checkbox\"\n//                         id=\"includeHashtags\"\n//                         checked={includeHashtags}\n//                         onChange={(e) => setIncludeHashtags(e.target.checked)}\n//                         className=\"sr-only peer\"\n//                       />\n//                       <div className=\"w-11 h-6 rounded-full peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-purple-800 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all\" \n//                         style={{ \n//                           backgroundColor: includeHashtags ? 'gray' : 'white',\n//                           borderColor: 'black',\n//                           border: '1px solid black'\n//                         }}></div>\n//                     </label>\n//                   </div>\n\n//                   <div className=\"flex items-center space-x-3\">\n//                     <label htmlFor=\"includeEmoji\" className=\"text-lg font-medium text-black\">\n//                       Add Emojis\n//                     </label>\n//                     <label className=\"relative inline-flex items-center cursor-pointer\">\n//                       <input\n//                         type=\"checkbox\"\n//                         id=\"includeEmoji\"\n//                         checked={includeEmoji}\n//                         onChange={(e) => setIncludeEmoji(e.target.checked)}\n//                         className=\"sr-only peer\"\n//                       />\n//                       <div className=\"w-11 h-6 rounded-full peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-purple-800 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all\" \n//                         style={{ \n//                           backgroundColor: includeEmoji ? 'gray' : 'white',\n//                           borderColor: 'black',\n//                           border: '1px solid black'\n//                         }}></div>\n//                     </label>\n//                   </div>\n//                 </div>\n\n//                 <button\n//                   type=\"submit\"\n//                   disabled={loading}\n//                   className=\"w-full py-4 px-6 rounded-xl font-semibold shadow-lg transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed bg-gradient-to-r from-purple-600 to-purple-700 text-white hover:from-purple-700 hover:to-purple-800\"\n//                 >\n//                   {loading ? (\n//                     <div className=\"flex items-center justify-center\">\n//                       <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-current mr-3\"></div>\n//                       Generating...\n//                     </div>\n//                   ) : (\n//                     'Generate Posts'\n//                   )}\n//                 </button>\n//               </form>\n\n//               {generatedContent.length > 0 && mounted && (\n//                 <div className=\"mt-8 space-y-6\">\n//                   {generatedContent.map((content, index) => (\n//                     <div key={index} className=\"bg-white/90 backdrop-blur-sm rounded-xl shadow-lg border border-gray-100\">\n//                       <div className=\"flex items-center justify-between p-4 border-b border-gray-100\">\n//                         <h2 className=\"text-lg font-semibold text-gray-800\">\n//                           Generated Post {index + 1}\n//                         </h2>\n//                         <button\n//                           onClick={() => handleCopy(content)}\n//                           className=\"flex items-center px-4 py-2 text-sm font-medium rounded-lg focus:outline-none focus:ring-2 transition-all duration-200 bg-gradient-to-r from-purple-600 to-purple-700 text-white hover:from-purple-700 hover:to-purple-800\"\n//                         >\n//                           {copied ? 'Copied! ‚úì' : 'Copy'}\n//                         </button>\n//                       </div>\n//                       <div className=\"p-6 whitespace-pre-wrap\">{content}</div>\n//                     </div>\n//                   ))}\n//                 </div>\n//               )}\n//             </div>\n//           </div>\n\n\n\n//         </div>\n//       </div>\n//     </main>\n//   );\n// }\n\n// export default Page;\n\n\n//testing\n'use client';\n\nimport { useState, useEffect } from 'react';\n\nconst TONE_OPTIONS = [\n  'Professional',\n  'Casual',\n  'Friendly',\n  'Humorous',\n  'Inspirational',\n  'Formal',\n  'Educational',\n] as const;\n\ntype ToneOption = typeof TONE_OPTIONS[number];\n\nexport default function Page() {\n  const [mounted, setMounted] = useState(false);\n  const [description, setDescription] = useState('');\n  const [platform, setPlatform] = useState('instagram');\n  const [tone, setTone] = useState<ToneOption>('Friendly');\n  const [wordLimit, setWordLimit] = useState(50);\n  const [includeHashtags, setIncludeHashtags] = useState(true);\n  const [includeEmoji, setIncludeEmoji] = useState(true);\n  const [generatedContent, setGeneratedContent] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [image, setImage] = useState<File | null>(null);\n  const [imagePreview, setImagePreview] = useState<string | null>(null);\n  const [copied, setCopied] = useState(false);\n\n  useEffect(() => setMounted(true), []);\n  if (!mounted) return null;\n\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      setImage(file);\n      const reader = new FileReader();\n      reader.onloadend = () => setImagePreview(reader.result as string);\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!description && !image && platform !== 'blog') {\n      alert('Please provide a description or upload an image.');\n      return;\n    }\n\n    setLoading(true);\n    setGeneratedContent('');\n\n    let imageBase64 = null;\n    if (image) {\n      const reader = new FileReader();\n      const base64Promise = new Promise<string>((resolve) => {\n        reader.onloadend = () => resolve(reader.result as string);\n      });\n      reader.readAsDataURL(image);\n      imageBase64 = await base64Promise;\n    }\n\n    const res = await fetch('/api/generate-post', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        description,\n        platform,\n        tone,\n        wordLimit,\n        includeHashtags,\n        includeEmoji,\n        imageBase64,\n      }),\n    });\n\n    const data = await res.json();\n    setGeneratedContent(data.content);\n    setLoading(false);\n  };\n\n  const handleCopy = async () => {\n    await navigator.clipboard.writeText(generatedContent);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  const isImagePlatform = platform === 'instagram' || platform === 'facebook';\n  const isBlogPlatform = platform === 'blog';\n\n  return (\n    <main className=\"min-h-screen flex flex-col items-center px-4 py-10 bg-gradient-to-br from-purple-50 via-white to-purple-100\">\n      <div className=\"text-center max-w-2xl mb-10\">\n        <h1 className=\"text-4xl md:text-5xl font-bold bg-gradient-to-r from-purple-600 to-pink-500 text-transparent bg-clip-text mb-3\">\n          Social Media Post Generator\n        </h1>\n        <p className=\"text-gray-600\">\n          Generate smart, AI-powered content for your platform ‚Äî now with image understanding üé®\n        </p>\n      </div>\n\n      <form\n        onSubmit={handleSubmit}\n        className=\"w-full max-w-3xl bg-white/80 backdrop-blur-md rounded-2xl shadow-xl border border-gray-100 p-8 space-y-6\"\n      >\n        {/* PLATFORM SELECT */}\n        <div>\n          <label className=\"font-medium mb-2 block text-gray-700\">Platform</label>\n          <select\n            value={platform}\n            onChange={(e) => {\n              setPlatform(e.target.value);\n              setDescription('');\n              setImage(null);\n              setImagePreview(null);\n              setGeneratedContent('');\n              setWordLimit(e.target.value === 'blog' ? 1000 : 50);\n            }}\n            className=\"w-full p-3 rounded-lg border border-gray-200 focus:ring-2 focus:ring-purple-500\"\n          >\n            <option value=\"instagram\">Instagram</option>\n            <option value=\"facebook\">Facebook</option>\n            <option value=\"twitter\">X (Twitter)</option>\n            <option value=\"linkedin\">LinkedIn</option>\n            <option value=\"blog\">Blog</option>\n          </select>\n        </div>\n\n        {/* IMAGE UPLOAD (Instagram/Facebook only) */}\n        {isImagePlatform && (\n          <div>\n            <label className=\"font-medium mb-2 block text-gray-700\">\n              Upload Image (optional)\n            </label>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={handleImageChange}\n              className=\"w-full p-2 border border-gray-300 rounded-lg\"\n            />\n            {imagePreview && (\n              <img\n                src={imagePreview}\n                alt=\"Preview\"\n                className=\"mt-4 rounded-xl shadow-md w-full max-h-80 object-cover\"\n              />\n            )}\n            <p className=\"text-sm text-gray-500 mt-2\">\n              The AI will analyze the image and use it to enhance your caption.\n            </p>\n          </div>\n        )}\n\n        {/* DESCRIPTION FIELD */}\n        <div>\n          <label className=\"font-medium mb-2 block text-gray-700\">\n            {isBlogPlatform\n              ? 'Blog Topic or Description'\n              : 'Post Description (optional if image provided)'}\n          </label>\n          <textarea\n            placeholder={\n              isBlogPlatform\n                ? 'Enter your blog topic or idea (e.g., ‚ÄúThe Future of AI in Education‚Äù)'\n                : 'Describe your post or leave blank if you uploaded an image.'\n            }\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            rows={4}\n            className=\"w-full p-4 rounded-xl border border-gray-200 focus:ring-2 focus:ring-purple-500 focus:outline-none resize-none\"\n          />\n        </div>\n\n        {/* SETTINGS */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <label className=\"font-medium mb-2 block text-gray-700\">Tone</label>\n            <select\n              value={tone}\n              onChange={(e) => setTone(e.target.value as ToneOption)}\n              className=\"w-full p-3 rounded-lg border border-gray-200 focus:ring-2 focus:ring-purple-500\"\n            >\n              {TONE_OPTIONS.map((t) => (\n                <option key={t} value={t}>\n                  {t}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label className=\"font-medium mb-2 block text-gray-700\">\n              {isBlogPlatform ? 'Target Word Count' : 'Word Limit'}\n            </label>\n            <input\n              type=\"number\"\n              value={wordLimit}\n              onChange={(e) => setWordLimit(Number(e.target.value))}\n              min={isBlogPlatform ? 1000 : 20}\n              max={isBlogPlatform ? 2500 : 250}\n              className=\"w-full p-3 rounded-lg border border-gray-200 focus:ring-2 focus:ring-purple-500\"\n            />\n          </div>\n        </div>\n\n        {/* TOGGLES */}\n        <div className=\"flex flex-wrap gap-6\">\n          <label className=\"flex items-center gap-2 text-gray-700\">\n            <input\n              type=\"checkbox\"\n              checked={includeHashtags}\n              onChange={(e) => setIncludeHashtags(e.target.checked)}\n              className=\"w-4 h-4\"\n            />\n            Include Hashtags\n          </label>\n\n          <label className=\"flex items-center gap-2 text-gray-700\">\n            <input\n              type=\"checkbox\"\n              checked={includeEmoji}\n              onChange={(e) => setIncludeEmoji(e.target.checked)}\n              className=\"w-4 h-4\"\n            />\n            Include Emojis\n          </label>\n        </div>\n\n        <button\n          type=\"submit\"\n          disabled={loading}\n          className=\"w-full bg-gradient-to-r from-purple-600 to-purple-700 text-white py-4 rounded-xl font-semibold hover:from-purple-700 hover:to-purple-800 transition-all\"\n        >\n          {loading ? 'Generating...' : 'Generate Content'}\n        </button>\n      </form>\n\n      {/* GENERATED CONTENT */}\n      {generatedContent && (\n        <div className=\"mt-10 w-full max-w-3xl bg-white shadow-lg border border-gray-100 rounded-xl p-6\">\n          <div className=\"flex justify-between items-center mb-3\">\n            <h2 className=\"font-semibold text-lg text-gray-800\">Generated Content</h2>\n            <button\n              onClick={handleCopy}\n              className={`px-3 py-2 rounded-lg text-sm font-medium ${\n                copied\n                  ? 'bg-green-100 text-green-700'\n                  : 'bg-purple-100 text-purple-700 hover:bg-purple-200'\n              }`}\n            >\n              {copied ? 'Copied!' : 'Copy'}\n            </button>\n          </div>\n          <p className=\"text-gray-800 whitespace-pre-wrap leading-relaxed\">{generatedContent}</p>\n        </div>\n      )}\n    </main>\n  );\n}\n\n\n\n\n// make the changes for the image upload\n\n// \"use client\";\n\n// import React, { useState } from \"react\";\n// import { Copy } from \"lucide-react\";\n\n// export default function PostGenerator() {\n//   const [platform, setPlatform] = useState(\"instagram\");\n//   const [description, setDescription] = useState(\"\");\n//   const [tone, setTone] = useState(\"Friendly\");\n//   const [includeHashtags, setIncludeHashtags] = useState(true);\n//   const [includeEmoji, setIncludeEmoji] = useState(true);\n//   const [makeThread, setMakeThread] = useState(false);\n//   const [wordLimit, setWordLimit] = useState(100);\n//   const [numVariations, setNumVariations] = useState(3);\n//   const [imageBase64, setImageBase64] = useState<string | null>(null);\n//   const [variations, setVariations] = useState<string[]>([]);\n//   const [loading, setLoading] = useState(false);\n\n//   const handleImageUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const file = e.target.files?.[0];\n//     if (file) {\n//       const reader = new FileReader();\n//       reader.onloadend = () => setImageBase64(reader.result as string);\n//       reader.readAsDataURL(file);\n//     }\n//   };\n\n//   const handleSubmit = async (e: React.FormEvent) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     setVariations([]);\n\n//     const payload = {\n//       platform,\n//       description,\n//       makeThread,\n//       wordLimit,\n//       tone,\n//       includeHashtags,\n//       includeEmoji,\n//       imageBase64,\n//       numVariations,\n//     };\n\n//     const res = await fetch(\"/api/generate-post\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(payload),\n//     });\n\n//     const data = await res.json();\n//     setVariations(data.variations || []);\n//     setLoading(false);\n//   };\n\n//   const copyText = (text: string) => {\n//     navigator.clipboard.writeText(text);\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-br from-indigo-100 via-purple-100 to-pink-100 flex items-center justify-center p-6\">\n//       <div className=\"w-full max-w-3xl bg-white rounded-3xl shadow-2xl p-8\">\n//         <h1 className=\"text-4xl font-extrabold text-center text-transparent bg-clip-text bg-gradient-to-r from-indigo-600 to-pink-600 mb-8\">\n//           ‚ú® AI Social Media Post Generator\n//         </h1>\n\n//         <form onSubmit={handleSubmit} className=\"space-y-6\">\n//           {/* Platform */}\n//           <div>\n//             <label className=\"font-semibold text-gray-800\">Platform</label>\n//             <select\n//               value={platform}\n//               onChange={(e) => setPlatform(e.target.value)}\n//               className=\"w-full border mt-1 rounded-lg p-3 bg-gray-50 text-gray-800 focus:ring-2 focus:ring-indigo-400\"\n//             >\n//               <option value=\"instagram\">Instagram</option>\n//               <option value=\"facebook\">Facebook</option>\n//               <option value=\"twitter\">Twitter (X)</option>\n//               <option value=\"linkedin\">LinkedIn</option>\n//             </select>\n//           </div>\n\n//           {/* Description */}\n//           <div>\n//             <label className=\"font-semibold text-gray-800\">\n//               Post Description (optional)\n//             </label>\n//             <textarea\n//               value={description}\n//               onChange={(e) => setDescription(e.target.value)}\n//               placeholder=\"Describe your post or leave empty to generate from image...\"\n//               className=\"w-full border mt-1 rounded-lg p-3 bg-gray-50 text-gray-800 focus:ring-2 focus:ring-indigo-400\"\n//               rows={3}\n//             />\n//           </div>\n\n//           {/* Image Upload */}\n//           <div>\n//             <label className=\"font-semibold text-gray-800\">Upload Image</label>\n//             <input\n//               type=\"file\"\n//               accept=\"image/*\"\n//               onChange={handleImageUpload}\n//               className=\"w-full border mt-1 p-2 rounded-lg bg-gray-50 text-gray-800\"\n//             />\n//             {imageBase64 && (\n//               <img\n//                 src={imageBase64}\n//                 alt=\"Preview\"\n//                 className=\"mt-3 w-40 h-40 object-cover rounded-xl border\"\n//               />\n//             )}\n//           </div>\n\n//           {/* Tone & Word Limit */}\n//           <div className=\"grid grid-cols-2 gap-4\">\n//             <div>\n//               <label className=\"font-semibold text-gray-800\">Tone</label>\n//               <select\n//                 value={tone}\n//                 onChange={(e) => setTone(e.target.value)}\n//                 className=\"w-full border mt-1 rounded-lg p-3 bg-gray-50 text-gray-800\"\n//               >\n//                 <option>Friendly</option>\n//                 <option>Professional</option>\n//                 <option>Witty</option>\n//                 <option>Inspirational</option>\n//               </select>\n//             </div>\n\n//             <div>\n//               <label className=\"font-semibold text-gray-800\">Word Limit</label>\n//               <input\n//                 type=\"number\"\n//                 value={wordLimit}\n//                 onChange={(e) => setWordLimit(Number(e.target.value))}\n//                 className=\"w-full border mt-1 rounded-lg p-3 bg-gray-50 text-gray-800\"\n//               />\n//             </div>\n//           </div>\n\n//           {/* Variations */}\n//           <div>\n//             <label className=\"font-semibold text-gray-800\">Number of Variations</label>\n//             <input\n//               type=\"number\"\n//               min=\"1\"\n//               max=\"5\"\n//               value={numVariations}\n//               onChange={(e) => setNumVariations(Number(e.target.value))}\n//               className=\"w-full border mt-1 rounded-lg p-3 bg-gray-50 text-gray-800\"\n//             />\n//           </div>\n\n//           {/* Checkboxes */}\n//           <div className=\"flex gap-6\">\n//             <label className=\"flex items-center gap-2 text-gray-800\">\n//               <input\n//                 type=\"checkbox\"\n//                 checked={includeHashtags}\n//                 onChange={() => setIncludeHashtags(!includeHashtags)}\n//               />\n//               Hashtags\n//             </label>\n\n//             <label className=\"flex items-center gap-2 text-gray-800\">\n//               <input\n//                 type=\"checkbox\"\n//                 checked={includeEmoji}\n//                 onChange={() => setIncludeEmoji(!includeEmoji)}\n//               />\n//               Emojis\n//             </label>\n//           </div>\n\n//           {/* Submit */}\n//           <button\n//             type=\"submit\"\n//             disabled={loading}\n//             className=\"w-full py-3 rounded-xl font-bold text-white bg-gradient-to-r from-indigo-600 to-pink-600 hover:opacity-90 transition-all\"\n//           >\n//             {loading ? \"Generating...\" : \"Generate Post\"}\n//           </button>\n//         </form>\n\n//         {/* Results */}\n//         {variations.length > 0 && (\n//           <div className=\"mt-8 space-y-4\">\n//             <h2 className=\"text-2xl font-bold text-gray-800 mb-3\">\n//               Generated Variations:\n//             </h2>\n\n//             {variations.map((v, i) => (\n//               <div\n//                 key={i}\n//                 className=\"relative bg-gray-50 p-4 rounded-xl border hover:shadow-md transition\"\n//               >\n//                 <button\n//                   onClick={() => copyText(v)}\n//                   className=\"absolute top-3 right-3 text-gray-500 hover:text-indigo-600\"\n//                   title=\"Copy to clipboard\"\n//                 >\n//                   <Copy size={18} />\n//                 </button>\n//                 <p className=\"text-gray-900 whitespace-pre-line\">{v}</p>\n//               </div>\n//             ))}\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n"],"names":[],"mappings":"AAAA,gBAAgB;AAEhB,+CAA+C;AAE/C,yBAAyB;AACzB,oBAAoB;AACpB,cAAc;AACd,gBAAgB;AAChB,gBAAgB;AAChB,cAAc;AACd,qBAAqB;AACrB,mBAAmB;AACnB,qBAAqB;AACrB,cAAc;AAEd,iDAAiD;AAEjD,iCAAiC;AACjC,yBAAyB;AACzB,sBAAsB;AACtB,kBAAkB;AAClB,wBAAwB;AACxB,0BAA0B;AAC1B,8BAA8B;AAC9B,2BAA2B;AAC3B,IAAI;AAEJ,oBAAoB;AACpB,8BAA8B;AAC9B,mDAAmD;AAEnD,mBAAmB;AACnB,wDAAwD;AACxD,yDAAyD;AACzD,yDAAyD;AACzD,oDAAoD;AACpD,4EAA4E;AAC5E,mDAAmD;AACnD,iDAAiD;AACjD,kEAAkE;AAClE,mEAAmE;AACnE,6DAA6D;AAC7D,+DAA+D;AAE/D,yCAAyC;AACzC,sBAAsB;AACtB,wBAAwB;AACxB,YAAY;AAEZ,mDAAmD;AACnD,oBAAoB;AACpB,mBAAmB;AACnB,MAAM;AAEN,uEAAuE;AACvE,2DAA2D;AAC3D,wBAAwB;AACxB,mBAAmB;AACnB,8CAA8C;AAC9C,WAAW;AACX,sCAAsC;AACtC,UAAU;AAEV,0CAA0C;AAC1C,0BAA0B;AAC1B,kEAAkE;AAClE,QAAQ;AACR,2BAA2B;AAC3B,OAAO;AAEP,yDAAyD;AACzD,0BAA0B;AAC1B,wBAAwB;AACxB,wBAAwB;AACxB,+BAA+B;AAE/B,YAAY;AACZ,2DAA2D;AAC3D,wDAAwD;AACxD,sBAAsB;AACtB,sBAAsB;AACtB,kCAAkC;AAClC,4BAA4B;AAC5B,yBAAyB;AACzB,oBAAoB;AACpB,0EAA0E;AAC1E,0BAA0B;AAC1B,+BAA+B;AAC/B,4BAA4B;AAC5B,eAAe;AACf,aAAa;AAEb,6CAA6C;AAC7C,6DAA6D;AAC7D,sCAAsC;AACtC,wBAAwB;AACxB,wCAAwC;AACxC,kBAAkB;AAClB,2BAA2B;AAC3B,QAAQ;AACR,OAAO;AAEP,oDAAoD;AACpD,YAAY;AACZ,sDAAsD;AACtD,yBAAyB;AACzB,kDAAkD;AAClD,sBAAsB;AACtB,oDAAoD;AACpD,QAAQ;AACR,OAAO;AAEP,aAAa;AACb,uEAAuE;AACvE,wEAAwE;AACxE,UAAU;AACV,oCAAoC;AACpC,+EAA+E;AAC/E,qGAAqG;AACrG,sFAAsF;AACtF,8GAA8G;AAC9G,sFAAsF;AACtF,wGAAwG;AACxG,sFAAsF;AAEtF,kCAAkC;AAClC,iGAAiG;AACjG,2GAA2G;AAC3G,wGAAwG;AACxG,4GAA4G;AAC5G,sGAAsG;AACtG,eAAe;AAEf,6BAA6B;AAC7B,8CAA8C;AAC9C,0DAA0D;AAC1D,mKAAmK;AACnK,gDAAgD;AAChD,mBAAmB;AACnB,qFAAqF;AACrF,wDAAwD;AACxD,gBAAgB;AAChB,8DAA8D;AAC9D,kBAAkB;AAClB,yEAAyE;AACzE,sGAAsG;AACtG,iBAAiB;AAEjB,uCAAuC;AACvC,8DAA8D;AAC9D,oLAAoL;AACpL,6FAA6F;AAC7F,6TAA6T;AAC7T,uBAAuB;AACvB,qBAAqB;AACrB,yOAAyO;AACzO,+FAA+F;AAC/F,o7CAAo7C;AACp7C,yBAAyB;AACzB,2BAA2B;AAC3B,gLAAgL;AAChL,6FAA6F;AAC7F,0LAA0L;AAC1L,uBAAuB;AACvB,qBAAqB;AACrB,oLAAoL;AACpL,6FAA6F;AAC7F,ihBAAihB;AACjhB,uBAAuB;AACvB,qBAAqB;AACrB,oLAAoL;AACpL,6FAA6F;AAC7F,2zBAA2zB;AAC3zB,uBAAuB;AACvB,qBAAqB;AACrB,oLAAoL;AACpL,6FAA6F;AAC7F,2XAA2X;AAC3X,uBAAuB;AACvB,qBAAqB;AACrB,sLAAsL;AACtL,+FAA+F;AAC/F,snBAAsnB;AACtnB,yBAAyB;AACzB,uBAAuB;AAEvB,mBAAmB;AACnB,mCAAmC;AACnC,iDAAiD;AACjD,kDAAkD;AAClD,mJAAmJ;AACnJ,wBAAwB;AACxB,wGAAwG;AACxG,yDAAyD;AACzD,6BAA6B;AAC7B,8BAA8B;AAC9B,uCAAuC;AACvC,0CAA0C;AAC1C,uEAAuE;AACvE,+MAA+M;AAC/M,gCAAgC;AAChC,yCAAyC;AACzC,yBAAyB;AACzB,+BAA+B;AAC/B,4EAA4E;AAC5E,+BAA+B;AAC/B,uBAAuB;AACvB,yBAAyB;AAEzB,0EAA0E;AAC1E,0BAA0B;AAC1B,uGAAuG;AACvG,iCAAiC;AACjC,+BAA+B;AAC/B,8BAA8B;AAC9B,sCAAsC;AACtC,yCAAyC;AACzC,sEAAsE;AACtE,iNAAiN;AACjN,qDAAqD;AACrD,wBAAwB;AACxB,qEAAqE;AACrE,mEAAmE;AACnE,2DAA2D;AAC3D,mEAAmE;AACnE,qEAAqE;AACrE,gCAAgC;AAChC,2BAA2B;AAE3B,0BAA0B;AAC1B,mGAAmG;AACnG,sCAAsC;AACtC,+BAA+B;AAC/B,8BAA8B;AAC9B,kCAAkC;AAClC,qCAAqC;AACrC,gFAAgF;AAChF,iNAAiN;AACjN,qDAAqD;AACrD,wBAAwB;AACxB,mDAAmD;AACnD,iEAAiE;AACjE,4BAA4B;AAC5B,gCAAgC;AAChC,2BAA2B;AAC3B,yBAAyB;AAEzB,0EAA0E;AAC1E,uEAAuE;AACvE,4BAA4B;AAC5B,0GAA0G;AAC1G,4CAA4C;AAC5C,iCAAiC;AACjC,sEAAsE;AACtE,iCAAiC;AACjC,yCAAyC;AACzC,2CAA2C;AAC3C,qCAAqC;AACrC,uCAAuC;AACvC,8CAA8C;AAC9C,mFAAmF;AACnF,6FAA6F;AAC7F,sCAAsC;AACtC,wDAAwD;AACxD,mKAAmK;AACnK,6CAA6C;AAC7C,uDAAuD;AACvD,+BAA+B;AAC/B,6BAA6B;AAC7B,mHAAmH;AACnH,+BAA+B;AAC/B,6BAA6B;AAC7B,uBAAuB;AAEvB,0BAA0B;AAC1B,8GAA8G;AAC9G,6CAA6C;AAC7C,+BAA+B;AAC/B,8BAA8B;AAC9B,6CAA6C;AAC7C,gDAAgD;AAChD,qFAAqF;AACrF,iNAAiN;AACjN,qDAAqD;AACrD,wBAAwB;AACxB,wDAAwD;AACxD,gGAAgG;AAChG,4BAA4B;AAC5B,gCAAgC;AAChC,2BAA2B;AAC3B,yBAAyB;AAEzB,oEAAoE;AACpE,iDAAiD;AACjD,oEAAoE;AACpE,gGAAgG;AAChG,yCAAyC;AACzC,iCAAiC;AACjC,6FAA6F;AAC7F,iCAAiC;AACjC,4CAA4C;AAC5C,4CAA4C;AAC5C,iDAAiD;AACjD,8EAA8E;AAC9E,qDAAqD;AACrD,6BAA6B;AAC7B,+YAA+Y;AAC/Y,sCAAsC;AACtC,8EAA8E;AAC9E,oDAAoD;AACpD,wDAAwD;AACxD,sCAAsC;AACtC,iCAAiC;AACjC,6BAA6B;AAC7B,uBAAuB;AAEvB,kEAAkE;AAClE,mGAAmG;AACnG,qCAAqC;AACrC,+BAA+B;AAC/B,2FAA2F;AAC3F,+BAA+B;AAC/B,0CAA0C;AAC1C,+CAA+C;AAC/C,oDAAoD;AACpD,iFAAiF;AACjF,mDAAmD;AACnD,2BAA2B;AAC3B,6YAA6Y;AAC7Y,oCAAoC;AACpC,iFAAiF;AACjF,kDAAkD;AAClD,sDAAsD;AACtD,oCAAoC;AACpC,+BAA+B;AAC/B,2BAA2B;AAE3B,kEAAkE;AAClE,gGAAgG;AAChG,mCAAmC;AACnC,+BAA+B;AAC/B,2FAA2F;AAC3F,+BAA+B;AAC/B,0CAA0C;AAC1C,4CAA4C;AAC5C,iDAAiD;AACjD,8EAA8E;AAC9E,mDAAmD;AACnD,2BAA2B;AAC3B,6YAA6Y;AAC7Y,oCAAoC;AACpC,8EAA8E;AAC9E,kDAAkD;AAClD,sDAAsD;AACtD,oCAAoC;AACpC,+BAA+B;AAC/B,2BAA2B;AAC3B,yBAAyB;AAEzB,0BAA0B;AAC1B,kCAAkC;AAClC,uCAAuC;AACvC,oQAAoQ;AACpQ,oBAAoB;AACpB,iCAAiC;AACjC,yEAAyE;AACzE,iHAAiH;AACjH,sCAAsC;AACtC,6BAA6B;AAC7B,0BAA0B;AAC1B,uCAAuC;AACvC,uBAAuB;AACvB,4BAA4B;AAC5B,wBAAwB;AAExB,6DAA6D;AAC7D,mDAAmD;AACnD,gEAAgE;AAChE,6HAA6H;AAC7H,yGAAyG;AACzG,+EAA+E;AAC/E,uDAAuD;AACvD,gCAAgC;AAChC,kCAAkC;AAClC,gEAAgE;AAChE,mQAAmQ;AACnQ,4BAA4B;AAC5B,4DAA4D;AAC5D,oCAAoC;AACpC,+BAA+B;AAC/B,iFAAiF;AACjF,6BAA6B;AAC7B,wBAAwB;AACxB,yBAAyB;AACzB,mBAAmB;AACnB,qBAAqB;AACrB,mBAAmB;AAInB,iBAAiB;AACjB,eAAe;AACf,cAAc;AACd,OAAO;AACP,IAAI;AAEJ,uBAAuB;AAGvB,SAAS;;;;;AAGT;AAFA;;;AAIA,MAAM,eAAe;IACnB;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAIc,SAAS;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc;IAC7C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAChD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAChE,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE,IAAM,WAAW,OAAO,EAAE;IACpC,IAAI,CAAC,SAAS,OAAO;IAErB,MAAM,oBAAoB,CAAC;QACzB,MAAM,OAAO,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE;QAChC,IAAI,MAAM;YACR,SAAS;YACT,MAAM,SAAS,IAAI;YACnB,OAAO,SAAS,GAAG,IAAM,gBAAgB,OAAO,MAAM;YACtD,OAAO,aAAa,CAAC;QACvB;IACF;IAEA,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,IAAI,CAAC,eAAe,CAAC,SAAS,aAAa,QAAQ;YACjD,MAAM;YACN;QACF;QAEA,WAAW;QACX,oBAAoB;QAEpB,IAAI,cAAc;QAClB,IAAI,OAAO;YACT,MAAM,SAAS,IAAI;YACnB,MAAM,gBAAgB,IAAI,QAAgB,CAAC;gBACzC,OAAO,SAAS,GAAG,IAAM,QAAQ,OAAO,MAAM;YAChD;YACA,OAAO,aAAa,CAAC;YACrB,cAAc,MAAM;QACtB;QAEA,MAAM,MAAM,MAAM,MAAM,sBAAsB;YAC5C,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBACnB;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;YACF;QACF;QAEA,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,oBAAoB,KAAK,OAAO;QAChC,WAAW;IACb;IAEA,MAAM,aAAa;QACjB,MAAM,UAAU,SAAS,CAAC,SAAS,CAAC;QACpC,UAAU;QACV,WAAW,IAAM,UAAU,QAAQ;IACrC;IAEA,MAAM,kBAAkB,aAAa,eAAe,aAAa;IACjE,MAAM,iBAAiB,aAAa;IAEpC,qBACE,8OAAC;QAAK,WAAU;;0BACd,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAiH;;;;;;kCAG/H,8OAAC;wBAAE,WAAU;kCAAgB;;;;;;;;;;;;0BAK/B,8OAAC;gBACC,UAAU;gBACV,WAAU;;kCAGV,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAAuC;;;;;;0CACxD,8OAAC;gCACC,OAAO;gCACP,UAAU,CAAC;oCACT,YAAY,EAAE,MAAM,CAAC,KAAK;oCAC1B,eAAe;oCACf,SAAS;oCACT,gBAAgB;oCAChB,oBAAoB;oCACpB,aAAa,EAAE,MAAM,CAAC,KAAK,KAAK,SAAS,OAAO;gCAClD;gCACA,WAAU;;kDAEV,8OAAC;wCAAO,OAAM;kDAAY;;;;;;kDAC1B,8OAAC;wCAAO,OAAM;kDAAW;;;;;;kDACzB,8OAAC;wCAAO,OAAM;kDAAU;;;;;;kDACxB,8OAAC;wCAAO,OAAM;kDAAW;;;;;;kDACzB,8OAAC;wCAAO,OAAM;kDAAO;;;;;;;;;;;;;;;;;;oBAKxB,iCACC,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAAuC;;;;;;0CAGxD,8OAAC;gCACC,MAAK;gCACL,QAAO;gCACP,UAAU;gCACV,WAAU;;;;;;4BAEX,8BACC,8OAAC;gCACC,KAAK;gCACL,KAAI;gCACJ,WAAU;;;;;;0CAGd,8OAAC;gCAAE,WAAU;0CAA6B;;;;;;;;;;;;kCAO9C,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CACd,iBACG,8BACA;;;;;;0CAEN,8OAAC;gCACC,aACE,iBACI,0EACA;gCAEN,OAAO;gCACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;gCAC9C,MAAM;gCACN,WAAU;;;;;;;;;;;;kCAKd,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAAuC;;;;;;kDACxD,8OAAC;wCACC,OAAO;wCACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;wCACvC,WAAU;kDAET,aAAa,GAAG,CAAC,CAAC,kBACjB,8OAAC;gDAAe,OAAO;0DACpB;+CADU;;;;;;;;;;;;;;;;0CAOnB,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDACd,iBAAiB,sBAAsB;;;;;;kDAE1C,8OAAC;wCACC,MAAK;wCACL,OAAO;wCACP,UAAU,CAAC,IAAM,aAAa,OAAO,EAAE,MAAM,CAAC,KAAK;wCACnD,KAAK,iBAAiB,OAAO;wCAC7B,KAAK,iBAAiB,OAAO;wCAC7B,WAAU;;;;;;;;;;;;;;;;;;kCAMhB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAM,WAAU;;kDACf,8OAAC;wCACC,MAAK;wCACL,SAAS;wCACT,UAAU,CAAC,IAAM,mBAAmB,EAAE,MAAM,CAAC,OAAO;wCACpD,WAAU;;;;;;oCACV;;;;;;;0CAIJ,8OAAC;gCAAM,WAAU;;kDACf,8OAAC;wCACC,MAAK;wCACL,SAAS;wCACT,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,OAAO;wCACjD,WAAU;;;;;;oCACV;;;;;;;;;;;;;kCAKN,8OAAC;wBACC,MAAK;wBACL,UAAU;wBACV,WAAU;kCAET,UAAU,kBAAkB;;;;;;;;;;;;YAKhC,kCACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAsC;;;;;;0CACpD,8OAAC;gCACC,SAAS;gCACT,WAAW,CAAC,yCAAyC,EACnD,SACI,gCACA,qDACJ;0CAED,SAAS,YAAY;;;;;;;;;;;;kCAG1B,8OAAC;wBAAE,WAAU;kCAAqD;;;;;;;;;;;;;;;;;;AAK5E,EAKA,wCAAwC;CAExC,gBAAgB;CAEhB,2CAA2C;CAC3C,uCAAuC;CAEvC,4CAA4C;CAC5C,2DAA2D;CAC3D,wDAAwD;CACxD,kDAAkD;CAClD,kEAAkE;CAClE,4DAA4D;CAC5D,yDAAyD;CACzD,qDAAqD;CACrD,2DAA2D;CAC3D,yEAAyE;CACzE,gEAAgE;CAChE,mDAAmD;CAEnD,4EAA4E;CAC5E,wCAAwC;CACxC,kBAAkB;CAClB,yCAAyC;CACzC,0EAA0E;CAC1E,oCAAoC;CACpC,QAAQ;CACR,OAAO;CAEP,yDAAyD;CACzD,0BAA0B;CAC1B,wBAAwB;CACxB,yBAAyB;CAEzB,wBAAwB;CACxB,kBAAkB;CAClB,qBAAqB;CACrB,oBAAoB;CACpB,mBAAmB;CACnB,cAAc;CACd,yBAAyB;CACzB,sBAAsB;CACtB,qBAAqB;CACrB,uBAAuB;CACvB,SAAS;CAET,sDAAsD;CACtD,wBAAwB;CACxB,yDAAyD;CACzD,uCAAuC;CACvC,UAAU;CAEV,qCAAqC;CACrC,4CAA4C;CAC5C,yBAAyB;CACzB,OAAO;CAEP,yCAAyC;CACzC,2CAA2C;CAC3C,OAAO;CAEP,aAAa;CACb,uIAAuI;CACvI,+EAA+E;CAC/E,+IAA+I;CAC/I,6CAA6C;CAC7C,gBAAgB;CAEhB,+DAA+D;CAC/D,6BAA6B;CAC7B,kBAAkB;CAClB,8EAA8E;CAC9E,sBAAsB;CACtB,iCAAiC;CACjC,8DAA8D;CAC9D,0HAA0H;CAC1H,gBAAgB;CAChB,6DAA6D;CAC7D,2DAA2D;CAC3D,6DAA6D;CAC7D,2DAA2D;CAC3D,wBAAwB;CACxB,mBAAmB;CAEnB,gCAAgC;CAChC,kBAAkB;CAClB,8DAA8D;CAC9D,4CAA4C;CAC5C,uBAAuB;CACvB,wBAAwB;CACxB,oCAAoC;CACpC,iEAAiE;CACjE,0FAA0F;CAC1F,0HAA0H;CAC1H,yBAAyB;CACzB,iBAAiB;CACjB,mBAAmB;CAEnB,iCAAiC;CACjC,kBAAkB;CAClB,kFAAkF;CAClF,qBAAqB;CACrB,4BAA4B;CAC5B,iCAAiC;CACjC,6CAA6C;CAC7C,uFAAuF;CACvF,iBAAiB;CACjB,gCAAgC;CAChC,qBAAqB;CACrB,oCAAoC;CACpC,gCAAgC;CAChC,4EAA4E;CAC5E,mBAAmB;CACnB,iBAAiB;CACjB,mBAAmB;CAEnB,sCAAsC;CACtC,qDAAqD;CACrD,oBAAoB;CACpB,4EAA4E;CAC5E,wBAAwB;CACxB,+BAA+B;CAC/B,4DAA4D;CAC5D,yFAAyF;CACzF,kBAAkB;CAClB,4CAA4C;CAC5C,gDAAgD;CAChD,yCAAyC;CACzC,iDAAiD;CACjD,0BAA0B;CAC1B,qBAAqB;CAErB,oBAAoB;CACpB,kFAAkF;CAClF,uBAAuB;CACvB,gCAAgC;CAChC,oCAAoC;CACpC,yEAAyE;CACzE,yFAAyF;CACzF,mBAAmB;CACnB,qBAAqB;CACrB,mBAAmB;CAEnB,+BAA+B;CAC/B,kBAAkB;CAClB,0FAA0F;CAC1F,qBAAqB;CACrB,8BAA8B;CAC9B,wBAAwB;CACxB,wBAAwB;CACxB,sCAAsC;CACtC,2EAA2E;CAC3E,uFAAuF;CACvF,iBAAiB;CACjB,mBAAmB;CAEnB,+BAA+B;CAC/B,yCAAyC;CACzC,wEAAwE;CACxE,uBAAuB;CACvB,kCAAkC;CAClC,4CAA4C;CAC5C,wEAAwE;CACxE,mBAAmB;CACnB,yBAAyB;CACzB,uBAAuB;CAEvB,wEAAwE;CACxE,uBAAuB;CACvB,kCAAkC;CAClC,yCAAyC;CACzC,kEAAkE;CAClE,mBAAmB;CACnB,uBAAuB;CACvB,uBAAuB;CACvB,mBAAmB;CAEnB,2BAA2B;CAC3B,oBAAoB;CACpB,4BAA4B;CAC5B,iCAAiC;CACjC,mJAAmJ;CACnJ,cAAc;CACd,4DAA4D;CAC5D,sBAAsB;CACtB,kBAAkB;CAElB,0BAA0B;CAC1B,sCAAsC;CACtC,6CAA6C;CAC7C,qEAAqE;CACrE,sCAAsC;CACtC,oBAAoB;CAEpB,0CAA0C;CAC1C,qBAAqB;CACrB,0BAA0B;CAC1B,mGAAmG;CACnG,kBAAkB;CAClB,0BAA0B;CAC1B,gDAAgD;CAChD,2FAA2F;CAC3F,8CAA8C;CAC9C,oBAAoB;CACpB,uCAAuC;CACvC,4BAA4B;CAC5B,2EAA2E;CAC3E,uBAAuB;CACvB,kBAAkB;CAClB,mBAAmB;CACnB,aAAa;CACb,eAAe;CACf,aAAa;CACb,OAAO;CACP,IAAI"}},
    {"offset": {"line": 1029, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1039, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HARDIK/Desktop/Social-Media-Post-Generator-main/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAQzC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1CJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACO,SAAS,EAAE;;QAIlC;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 1053, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1058, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HARDIK/Desktop/Social-Media-Post-Generator-main/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0]}},
    {"offset": {"line": 1060, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1065, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HARDIK/Desktop/Social-Media-Post-Generator-main/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0]}},
    {"offset": {"line": 1067, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}